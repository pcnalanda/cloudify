events {
    worker_connections 1024;
}

http {
    # Define an upstream block to balance traffic between web4 and web5
    upstream nginx_director {
        server web4_nginx:80;
        server web5_nginx:80;
    }
    upstream director1 {
        server web1:80;
    }

    upstream director2 {
        server web2:80;
        server web3:80;
    }
    # New upstreams for web4_nginx and web5_nginx


    upstream static_file_director {
        server web3:80;
    }
    upstream nodejs_director {
        server nodejs:3000;
    }
    upstream springboot_director {
        server springboot:8080;
    }
    # Cache for static files
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

    server {
        listen 80;
        server_name localhost;


        # Route ^/project1/ to director1
        location /project1/ {
            proxy_pass http://director1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route ^/project2/ to director2
        location /project2/ {
            proxy_pass http://director2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # New routes for web4_nginx and web5_nginx
        location /nginx_projects/ {
            proxy_pass http://nginx_director;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # these headers to help with the 400 error
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_buffering off;
        }
        # Route /nodejs/ to nodejs_director
        location /nodejs/ {
            proxy_pass http://nodejs_director;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /springboot/ {
            proxy_pass http://springboot_director;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Use the upstream block to load balance requests
        location / {
            proxy_pass http://nginx_director;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Cache static content
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public";
            proxy_cache STATIC;
            proxy_cache_valid 200 1d;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_pass http://nginx_director;
        }

        keepalive_timeout 65;
    }
}
